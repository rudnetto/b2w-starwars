// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Planets test suite should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Planets />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <styled.div>
        <styled.div>
                <Styled(WithStyles(Icon))
                        color="primary"
                        style={
                                Object {
                                        "fontSize": 64,
                                      }
                        }
                >
                        loop
                </Styled(WithStyles(Icon))>
        </styled.div>
</styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <Styled(WithStyles(Icon))
                    color="primary"
                    style={
                              Object {
                                        "fontSize": 64,
                                      }
                    }
          >
                    loop
          </Styled(WithStyles(Icon))>
</styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            false,
            <Styled(WithStyles(Icon))
              color="primary"
              style={
                            Object {
                                          "fontSize": 64,
                                        }
              }
>
              loop
</Styled(WithStyles(Icon))>,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "loop",
              "color": "primary",
              "style": Object {
                "fontSize": 64,
              },
            },
            "ref": null,
            "rendered": "loop",
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <styled.div>
          <styled.div>
                    <Styled(WithStyles(Icon))
                              color="primary"
                              style={
                                        Object {
                                                  "fontSize": 64,
                                                }
                              }
                    >
                              loop
                    </Styled(WithStyles(Icon))>
          </styled.div>
</styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <Styled(WithStyles(Icon))
                        color="primary"
                        style={
                                    Object {
                                                "fontSize": 64,
                                              }
                        }
            >
                        loop
            </Styled(WithStyles(Icon))>
</styled.div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              false,
              <Styled(WithStyles(Icon))
                color="primary"
                style={
                                Object {
                                                "fontSize": 64,
                                              }
                }
>
                loop
</Styled(WithStyles(Icon))>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "loop",
                "color": "primary",
                "style": Object {
                  "fontSize": 64,
                },
              },
              "ref": null,
              "rendered": "loop",
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
